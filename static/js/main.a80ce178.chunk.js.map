{"version":3,"sources":["components/Jumbotron/index.js","components/Navbar/index.js","components/Card/index.js","components/Footer/index.js","App.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","Navbar","props","href","score","highScore","Card","id","onClick","cardClick","alt","name","src","image","Footer","App","state","characters","clicked","shuffleCards","cards","i","length","j","Math","floor","random","_ref","e","_this","idClicked","target","includes","setState","alert","concat","_this2","this","components_Navbar","components_Jumbotron","map","character","components_Card","key","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"k8DAaeA,MAVf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,8ICQSE,MAZf,SAAgBC,GACZ,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,YAAtB,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,4BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,UAAiCE,EAAME,MAAvC,kBAA6DF,EAAMG,oBCKpEC,MAXf,SAAcJ,GACV,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,GAAIL,EAAMK,GAAIC,QAASN,EAAMO,WAC/CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBO,GAAIL,EAAMK,IACrCV,EAAAC,EAAAC,cAAA,OAAKQ,GAAIL,EAAMK,GAAIG,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,SAEnDhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYO,GAAIL,EAAMK,IAAKL,EAAMS,cCI7CG,MAVf,WACI,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,8BAA8BH,UAAU,oBAAhD,sDC6EDe,6MAxEbC,MAAQ,CACNC,aACAb,MAAO,EACPC,UAAW,EACXa,QAAS,MAGXC,aAAe,SAACC,GACd,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,KASTX,UAAY,SAACmB,GACXC,EAAKV,aAAaF,GAClB,IAAIa,EAAYF,EAAEG,OAAOxB,GACrBsB,EAAKb,MAAME,QAAQc,SAASF,IAC9BD,EAAKI,SAAS,CACZf,QAAS,GACTd,MAAO,EACPa,WAAYA,IAEdiB,MAAM,sDAEFL,EAAKb,MAAMZ,OAASyB,EAAKb,MAAMX,UACjCwB,EAAKI,SAAS,CACZ7B,MAAOyB,EAAKb,MAAMZ,MAAQ,EAC1BC,UAAWwB,EAAKb,MAAMZ,MAAQ,EAC9Ba,WAAYA,EACZC,QAASW,EAAKb,MAAME,QAAQiB,OAAOL,KAGrCD,EAAKI,SAAS,CACZ7B,MAAOyB,EAAKb,MAAMZ,MAAQ,EAC1Ba,WAAYA,EACZC,QAASW,EAAKb,MAAME,QAAQiB,OAAOL,8EAMlC,IAAAM,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACuC,EAAD,CACElC,MAAOiC,KAAKrB,MAAMZ,MAClBC,UAAWgC,KAAKrB,MAAMX,YAExBR,EAAAC,EAAAC,cAACwC,EAAD,MACCF,KAAKrB,MAAMC,WAAWuB,IAAI,SAAAC,GAAS,OAClC5C,EAAAC,EAAAC,cAAC2C,EAAD,CACEjC,UAAW2B,EAAK3B,UAChBkC,IAAKF,EAAUlC,GACfI,KAAM8B,EAAU9B,KAChBE,MAAO4B,EAAU5B,MACjBN,GAAIkC,EAAUlC,OAGlBV,EAAAC,EAAAC,cAAC6C,EAAD,cAvEUC,aCFlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a80ce178.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron\">\n      <h1>South Park Memory</h1>\n      <h4>\n        Click on each of the pictures below to increase your score. Do not click on the same picture more than once or you lose!\n      </h4>\n    </div>\n    );\n}\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <div className=\"row\">\n            <nav className=\"nav\">\n                <a href=\"/\" className=\"nav-item\">Clicky Game</a>\n                <h3 className=\"nav-item\">Click any image to begin</h3>\n                <h2 className=\"nav-item\">Score: {props.score} | High Score: {props.highScore}</h2>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n    return (\n        <div className=\"card\" id={props.id} onClick={props.cardClick}>\n            <div className=\"img-container\" id={props.id}>\n                <img id={props.id} alt={props.name} src={props.image} />\n            </div>\n            <div className=\"char-name\" id={props.id}>{props.name}</div>\n        </div>\n    );\n};\n\nexport default Card;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return (\n        <div className=\"row\">\n            <nav className=\"nava\">\n                <a href=\"https://github.com/GregMash\" className=\"nava a nava-item\">Having fun? View my other work on Github</a>\n            </nav>\n        </div>\n    );\n};\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron/index\";\nimport Navbar from \"./components/Navbar/index\";\nimport Card from \"./components/Card/index\";\nimport Footer from \"./components/Footer/index\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n  /* Setting state. \n  Characters is the array of json for each South Park character\n  Score and High Score starts at 0 and is incremented\n  clicked is an empty array that becomes populated with the id's of each character as they are clicked. It acts as the check to see if the character has already been clicked.   */\n  state = {\n    characters,\n    score: 0,\n    highScore: 0,\n    clicked: []\n  };\n  // This method will shuffle the cards and display them in random postions when each is clicked.\n  shuffleCards = (cards) => {\n    for (let i = cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n    return cards;\n  }\n  /* This method calls the shuffle method on each click\n  It then checks to see if the clicked item has already been clicked.\n  If it has been clicked, it resets the game\n  Otherwise, it then checks if the current score is larger than the high score.\n  If it is larger, it updates both the score and high score + 1.\n  It also adds the id of the clicked item to the clicked array for future checking\n  Otherwise, it only updates the current score and adds the id into the clicked array.   */\n  cardClick = (e) => {\n    this.shuffleCards(characters);\n    let idClicked = e.target.id;\n    if (this.state.clicked.includes(idClicked)) {\n      this.setState({\n        clicked: [],\n        score: 0,\n        characters: characters\n      });\n      alert(\"Oops, You already clicked this person. Try Again!\");\n    } else {\n      if (this.state.score >= this.state.highScore) {\n        this.setState({\n          score: this.state.score + 1,\n          highScore: this.state.score + 1,\n          characters: characters,\n          clicked: this.state.clicked.concat(idClicked)\n        });\n      } else {\n        this.setState({\n          score: this.state.score + 1,\n          characters: characters,\n          clicked: this.state.clicked.concat(idClicked)\n        });\n      };\n    };\n  };\n  // Rendering\n  render() {\n    return (\n      <div className=\"container-fullwidth\">\n        <Navbar\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <Jumbotron />\n        {this.state.characters.map(character => (\n          <Card\n            cardClick={this.cardClick}\n            key={character.id}\n            name={character.name}\n            image={character.image}\n            id={character.id}\n          />\n        ))}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}